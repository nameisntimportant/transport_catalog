include_directories(${UTILS_DIRECTORY})

set(PROJECT_SRCS
    main.cpp
    json.cpp
    baseRequests.cpp
    transportCatalog.cpp
    sphere.cpp
    statRequests.cpp
    transportRouter.cpp
    ${UTILS_DIRECTORY}/utils.cpp)

# remove makeVisitor.h since it unused
set(PROJECT_HDRS
    json.h
    baseRequests.h
    transportCatalog.h
    sphere.h
    statRequests.h
    graph.h
    router.h
    routeDistancesDict.h
    transportRouter.h
    ${UTILS_DIRECTORY}/utils.h
    ${UTILS_DIRECTORY}/log.h
    ${UTILS_DIRECTORY}/makeVisitor.h
    ${UTILS_DIRECTORY}/profiler.h)

set(PROTO_DIRECTORY proto)
find_package(Protobuf REQUIRED)
include_directories(${Protobuf_INCLUDE_DIRS})
include_directories(${CMAKE_CURRENT_BINARY_DIR}) # to include autogenerated *.pb.h files
set(PROJECT_PROTOS ${PROTO_DIRECTORY}/transport_catalog.proto)
protobuf_generate_cpp(PROTO_SRCS PROTO_HDRS ${PROJECT_PROTOS})

add_executable(${PROJECT_NAME} ${PROJECT_SRCS} ${PROJECT_HDRS} ${PROTO_SRCS} ${PROTO_HDRS})

target_link_libraries(${PROJECT_NAME} ${Protobuf_LIBRARIES})

if(RUN_UNIT_TESTS_AUTOMATICALLY)
    add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD COMMAND ${UNIT_TESTS_PROJECT})
endif()

set(PATH_TO_BINARY_UNDER_INTEGRATION_TEST ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME})
if(RUN_INTEGRATION_TESTS_AUTOMATICALLY)
    add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
                       COMMAND ${INTEGRATION_TEST_SCRIPT} ${PATH_TO_BINARY_UNDER_INTEGRATION_TEST}
                       WORKING_DIRECTORY ${INTEGRATION_TEST_DIRECTORY})
endif ()
